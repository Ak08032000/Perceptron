{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOnhv0muqj5b3WQnbM3+aHd"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Example of Perceptron learning Algorithm Using OR tabel**\n","First Here we are going to import the required library which is numpy.\n","\n","# Numpy\n","Numpy is a library for python programing language, adding support for large, multi-dimensional arrays and matrices, along with a large collection of high-level mathematical functions to operate on there arrays.\n","\n","It is very useful for:\n","  1. An array object of arbitrary homogeneous items\n","  2. Fast mathematical operations over arrays\n","  3. Linear Algebra, Fourier Transforms, Random Number Generation"],"metadata":{"id":"9fdVnFZbezkQ"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"j8BhOcuhdTrG"},"outputs":[],"source":["import numpy as np"]},{"cell_type":"markdown","source":["# Next we will make a class\n","We will give the class name **Perceptron**. Then we will make a `__init__` function or method. And we will add the variables in the `__init__` fuunction. Here we are putting the threshold or Epoch = 1 and learining_rate = 0.01. Next we will make a method name predict and pass variables name self and input which will take the input and predict the output. Then we make another method name train and take variables self, training_input, and labels where training_inputs are the inputs and labels are the required output. This method is used to train the system.\n","\n","# Changing the values\n","1. If threshold = 0 and learning_rate = 0.01 then\n","weight = 0,\n","weight = 0,\n","Bias = 0,\n","[1,1] = 0,\n","[1,0] = 0,\n","[0,1] = 0,\n","[0,0] = 0,\n","2. If threshold = 1 and learning_rate = 0.01 then\n","weight = 0,\n","weight = 0,\n","Bias = -0.01,\n","[1,1] = 0,\n","[1,0] = 0,\n","[0,1] = 0,\n","[0,0] = 0,\n","3. If threshold = 2 and learning_rate = 0.01 then\n","weight = 0.01,\n","weight = 0,\n","Bias = -0.01,\n","[1,1] = 0,\n","[1,0] = 0,\n","[0,1] = 0,\n","[0,0] = 0,\n","4. If threshold = 3 and learning_rate = 0.01 then\n","weight = 0.01,\n","weight = 0,\n","Bias = -0.02,\n","[1,1] = 0,\n","[1,0] = 0,\n","[0,1] = 0,\n","[0,0] = 0,\n","5. If threshold = 4 and learning_rate = 0.01 then\n","weight = 0.01,\n","weight = 0.01,\n","Bias = -0.02,\n","[1,1] = 0,\n","[1,0] = 0,\n","[0,1] = 0,\n","[0,0] = 0,\n","6. If threshold = 5 and learning_rate = 0.01 then\n","weight = 0.02,\n","weight = 0.01,\n","Bias = -0.02,\n","[1,1] = 1,\n","[1,0] = 0,\n","[0,1] = 0,\n","[0,0] = 0,\n","\n","On threshold = 5 the system is giving us the required output and if we increase out threshould and further out output is not going to change.\n","\n","# What is `__init__` function?\n","In Python, the `__init__` method is a special method that is called when an object of a class is created. It is also known as a constructor.\n","\n","# What is self?\n","Self represents the instance of the class. By using the “self” we can access the attributes and methods of the class in python. It binds the attributes with the given arguments.\n","\n","# WHat is learning_rate?\n","The learning rate is a tuning parameter in an optimization algorithm that determines the step size at each iteration while moving toward a minimum of a loss function.\n","\n","# What is zeros()?\n","The zeros() function is used to get a new array of given shape and type, filled with zeros.\n","\n","# What is zip?\n","The zip() function returns a zip object, which is an iterator of tuples where the first item in each passed iterator is paired together, and then the second item in each passed iterator are paired together etc."],"metadata":{"id":"uVv6xB4Ze17z"}},{"cell_type":"code","source":["class Perceptron(object):\n","\n","  def __init__(self, no_of_inputs, threshold=10, learning_rate=0.01):\n","    self.threshold = threshold\n","    self.learning_rate = learning_rate\n","    self.weights = np.zeros(no_of_inputs + 1)\n","\n","  def predict(self, inputs):\n","    summation = np.dot(inputs, self.weights[1:]) + self.weights[0]\n","    if summation>0:\n","      activation = 1\n","    else:\n","      activation = 0\n","    return activation\n","\n","  def train(self, training_inputs, labels):\n","    for _ in range(self.threshold):\n","      for inputs, label in zip(training_inputs, labels):\n","        prediction = self.predict(inputs)\n","        self.weights[1:] += self.learning_rate * (label - prediction) * inputs\n","        self.weights[0] += self.learning_rate * (label - prediction)\n","      print(self.weights[1:])\n","      print(self.weights[0])"],"metadata":{"id":"70b9_5MSdcaQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["There are four training data for this perticular system.\n"],"metadata":{"id":"DA5zdVrbe_D2"}},{"cell_type":"code","source":["training_inputs = []\n","training_inputs.append(np.array([1,1]))\n","training_inputs.append(np.array([0,1]))\n","training_inputs.append(np.array([1,0]))\n","training_inputs.append(np.array([0,0]))"],"metadata":{"id":"RMgptsNXddf4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["This are the required output."],"metadata":{"id":"52Cu79GdfBX_"}},{"cell_type":"code","source":["labels = np.array([1,0,0,0])"],"metadata":{"id":"EjClwAugdhnd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["This is the code to train the system on the dataset."],"metadata":{"id":"5TVu7BXVfFW4"}},{"cell_type":"code","source":["percep = Perceptron(2)\n","percep.train(training_inputs, labels)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7G21lUqudkJW","executionInfo":{"status":"ok","timestamp":1675200966265,"user_tz":0,"elapsed":8,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"d5f1d16c-ab5d-423c-b195-95f4ecd72517"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0. 0.]\n","-0.01\n","[0.01 0.  ]\n","-0.01\n","[0.01 0.  ]\n","-0.02\n","[0.01 0.01]\n","-0.02\n","[0.02 0.01]\n","-0.02\n","[0.02 0.01]\n","-0.02\n","[0.02 0.01]\n","-0.02\n","[0.02 0.01]\n","-0.02\n","[0.02 0.01]\n","-0.02\n","[0.02 0.01]\n","-0.02\n"]}]},{"cell_type":"markdown","source":["Predcting the output of [1,1] for OR tabel."],"metadata":{"id":"b411LE0dfSW-"}},{"cell_type":"code","source":["percep.predict(np.array([1,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PW749axpdm-1","executionInfo":{"status":"ok","timestamp":1675200966265,"user_tz":0,"elapsed":6,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"9da75528-2da2-4fe1-d52b-9a6c8fa4e31a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","source":["Predcting the output of [0,1] for OR tabel."],"metadata":{"id":"idJuPkwGhe3J"}},{"cell_type":"code","source":["percep.predict(np.array([0,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3Uz4TMbIdqDd","executionInfo":{"status":"ok","timestamp":1675200966765,"user_tz":0,"elapsed":2,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"d3842e63-2eb0-4d02-eb0f-9b27872599e7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["Predcting the output of [1,0] for OR tabel."],"metadata":{"id":"d6bFVZP_hne0"}},{"cell_type":"code","source":["percep.predict(np.array([1,0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tWxIjtjseed6","executionInfo":{"status":"ok","timestamp":1675200968638,"user_tz":0,"elapsed":4,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"9ef7edb9-3a20-423f-bcb5-c1c86a6de965"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["Predcting the output of [1,1] for OR tabel."],"metadata":{"id":"4TMRYzaAhqk_"}},{"cell_type":"code","source":["percep.predict(np.array([0,0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZE9t2lUNhYk_","executionInfo":{"status":"ok","timestamp":1675200969201,"user_tz":0,"elapsed":3,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"4da4e0ad-2739-402f-aad3-e7a05c532f43"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","source":["# Now here we are going to do the same thing for the XOR gate.\n","Here as you can see that the output we are getting is not the requires output it is because perceptron is only applicable for the linear data it will not work on non-linear datas."],"metadata":{"id":"pdcCLzY9pgpe"}},{"cell_type":"code","source":["training_inputs = []\n","training_inputs.append(np.array([1,1]))\n","training_inputs.append(np.array([0,1]))\n","training_inputs.append(np.array([1,0]))\n","training_inputs.append(np.array([0,0]))"],"metadata":{"id":"2rGyT_r4hcDI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["labels = np.array([0,1,1,0])"],"metadata":{"id":"qFVRbO94pyAW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["percep = Perceptron(2)\n","percep.train(training_inputs, labels)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J_vyc6hpwkhn","executionInfo":{"status":"ok","timestamp":1675200976869,"user_tz":0,"elapsed":2,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"d9b44073-b151-493c-b995-45c3988e5ebc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.   0.01]\n","0.0\n","[0.   0.01]\n","0.0\n","[0.   0.01]\n","0.0\n","[0.   0.01]\n","0.0\n","[0.   0.01]\n","0.0\n","[0.   0.01]\n","0.0\n","[0.   0.01]\n","0.0\n","[0.   0.01]\n","0.0\n","[0.   0.01]\n","0.0\n","[0.   0.01]\n","0.0\n"]}]},{"cell_type":"code","source":["percep.predict(np.array([1,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b2ZJmY2twlGe","executionInfo":{"status":"ok","timestamp":1675200990510,"user_tz":0,"elapsed":4,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"171f0b16-8d64-4f75-dc91-a95fcec8c850"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["percep.predict(np.array([0,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rMHy23UQwoc1","executionInfo":{"status":"ok","timestamp":1675201004569,"user_tz":0,"elapsed":3,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"12c8070c-bd16-4d24-a136-d528f3041828"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["percep.predict(np.array([1,0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NDcjq8Eswr6d","executionInfo":{"status":"ok","timestamp":1675201016382,"user_tz":0,"elapsed":3,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"d51948ad-dbf7-4b2c-edae-6bb467722aa1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["percep.predict(np.array([0,0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pwk3ZyL-wuyV","executionInfo":{"status":"ok","timestamp":1675201136490,"user_tz":0,"elapsed":4,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"8d8be5f1-666a-4eb2-b19a-63bdb1052c72"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":18}]},{"cell_type":"markdown","source":[],"metadata":{"id":"ev7xmViRxjWM"}},{"cell_type":"markdown","source":["# Now we are going to try this for more them 2 input for OR gate\n","Here all the espected output and the actual output are the same because OR gate is a linear data. No matter how much the input is perceptron can easily predict the correct input if its a linear data."],"metadata":{"id":"a72FHKOexYiM"}},{"cell_type":"code","source":["training_inputs = []\n","training_inputs.append(np.array([0,0,0]))\n","training_inputs.append(np.array([0,0,1]))\n","training_inputs.append(np.array([0,1,0]))\n","training_inputs.append(np.array([0,1,1]))\n","training_inputs.append(np.array([1,0,0]))\n","training_inputs.append(np.array([1,0,1]))\n","training_inputs.append(np.array([1,1,0]))\n","training_inputs.append(np.array([1,1,1]))"],"metadata":{"id":"tY60rQ3BxMJ-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["labels  = np.array([0,1,1,1,1,1,1,1])"],"metadata":{"id":"gJV7FcTTx182"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["percep = Perceptron(3)\n","percep.train(training_inputs, labels)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-99KtcJuyEl2","executionInfo":{"status":"ok","timestamp":1675201390797,"user_tz":0,"elapsed":5,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"99c852d5-fefd-44df-ab86-a8d92e6c8aad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.   0.   0.01]\n","0.01\n","[0.   0.01 0.01]\n","0.01\n","[0.01 0.01 0.01]\n","0.01\n","[0.01 0.01 0.01]\n","0.0\n","[0.01 0.01 0.01]\n","0.0\n","[0.01 0.01 0.01]\n","0.0\n","[0.01 0.01 0.01]\n","0.0\n","[0.01 0.01 0.01]\n","0.0\n","[0.01 0.01 0.01]\n","0.0\n","[0.01 0.01 0.01]\n","0.0\n"]}]},{"cell_type":"code","source":["percep.predict(np.array([0,0,0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K28Un9pJyKNl","executionInfo":{"status":"ok","timestamp":1675201981019,"user_tz":0,"elapsed":6,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"877fad59-c467-45aa-f676-2c024f42f902"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["percep.predict(np.array([0,0,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5nCjQ7V20aTE","executionInfo":{"status":"ok","timestamp":1675202007481,"user_tz":0,"elapsed":2,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"e06198bb-b5d6-4f64-885b-766afbf481c6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["percep.predict(np.array([0,1,0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TFxYOUns0gyF","executionInfo":{"status":"ok","timestamp":1675202023478,"user_tz":0,"elapsed":3,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"f490edb4-eea8-4ba4-bee3-3cf00fdce92a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["percep.predict(np.array([0,1,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f4BjwSpS0kqz","executionInfo":{"status":"ok","timestamp":1675202038239,"user_tz":0,"elapsed":3,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"3aed98c6-2cfe-47fb-a59b-daee1034d2e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["percep.predict(np.array([1,0,0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2b0_TyWI0oZd","executionInfo":{"status":"ok","timestamp":1675202050523,"user_tz":0,"elapsed":4,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"2165a0e2-7b5f-480f-99ac-354b1c80e5a2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["percep.predict(np.array([1,0,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"59YIzDjm0rZc","executionInfo":{"status":"ok","timestamp":1675202064173,"user_tz":0,"elapsed":3,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"e41ccf65-4eef-4ebf-b59f-f2d3a04e7cbd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["percep.predict(np.array([1,1,0]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a5IgHRtn0uuk","executionInfo":{"status":"ok","timestamp":1675202077180,"user_tz":0,"elapsed":3,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"47ac442b-4973-4819-a723-3af447f6d2eb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["percep.predict(np.array([1,1,1]))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GJLmeCwV0xxJ","executionInfo":{"status":"ok","timestamp":1675202087035,"user_tz":0,"elapsed":3,"user":{"displayName":"Akshayraj Nadar","userId":"09319845577663937055"}},"outputId":"1f26c0d9-769d-480a-8e90-980536fe6a43"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{},"execution_count":29}]}]}